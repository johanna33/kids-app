{"mappings":"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","sources":["<anon>","src/scripts/sections/animals.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"5T61B\", function(module, exports) {\n\n$parcel$export(module.exports, \"initialize\", () => $26b308b2c4cded8c$export$2a47f398eeff8b01);\n$parcel$export(module.exports, \"cleanup\", () => $26b308b2c4cded8c$export$de863c629cb9919d);\n\nvar $ioPRj = parcelRequire(\"ioPRj\");\n\nvar $hSXbD = parcelRequire(\"hSXbD\");\n\nvar $jKkLD = parcelRequire(\"jKkLD\");\n\nvar $klKV5 = parcelRequire(\"klKV5\");\n\nvar $bsJMP = parcelRequire(\"bsJMP\");\n\nvar $4yiPC = parcelRequire(\"4yiPC\");\n// Track event listeners for cleanup\nconst $26b308b2c4cded8c$var$eventListeners = [];\nfunction $26b308b2c4cded8c$export$2a47f398eeff8b01() {\n    $26b308b2c4cded8c$var$renderAnimalsSection();\n}\nfunction $26b308b2c4cded8c$export$de863c629cb9919d() {\n    $26b308b2c4cded8c$var$eventListeners.forEach(({ element: element, type: type, listener: listener })=>{\n        element.removeEventListener(type, listener);\n    });\n    $26b308b2c4cded8c$var$eventListeners.length = 0;\n}\n/**\n * Render the animals section\n */ function $26b308b2c4cded8c$var$renderAnimalsSection() {\n    const animalsContainer = (0, $hSXbD.getContainer)(\"animals-container\");\n    if (!animalsContainer) return;\n    // Clear the container efficiently\n    (0, $bsJMP.DOMUtils).clearContainer(animalsContainer);\n    // Create category buttons\n    const categoriesContainer = (0, $bsJMP.DOMUtils).createElement(\"div\", {\n        className: \"categories-container\"\n    });\n    const categories = [\n        {\n            id: \"all\",\n            name: \"All Animals\",\n            emoji: \"\\uD83D\\uDC3E\"\n        },\n        {\n            id: \"farm\",\n            name: \"Farm\",\n            emoji: \"\\uD83D\\uDC04\"\n        },\n        {\n            id: \"wild\",\n            name: \"Wild\",\n            emoji: \"\\uD83E\\uDD81\"\n        },\n        {\n            id: \"pet\",\n            name: \"Pets\",\n            emoji: \"\\uD83D\\uDC15\"\n        },\n        {\n            id: \"sea\",\n            name: \"Sea\",\n            emoji: \"\\uD83D\\uDC20\"\n        },\n        {\n            id: \"insect\",\n            name: \"Insects\",\n            emoji: \"\\uD83D\\uDC1D\"\n        },\n        {\n            id: \"bird\",\n            name: \"Birds\",\n            emoji: \"\\uD83E\\uDD89\"\n        }\n    ];\n    // Use batch operation for better performance\n    (0, $bsJMP.DOMUtils).batchOperation(()=>{\n        categories.forEach((category)=>{\n            const button = (0, $bsJMP.DOMUtils).createElement(\"button\", {\n                className: \"category-button\",\n                attributes: {\n                    \"data-category\": category.id,\n                    \"aria-label\": `Show ${category.name} animals`\n                },\n                html: `${category.emoji} ${category.name}`\n            });\n            // Add event listener and track it for cleanup\n            const clickListener = ()=>{\n                // Remove active class from all buttons\n                document.querySelectorAll(\".category-button\").forEach((btn)=>{\n                    btn.classList.remove(\"active\");\n                });\n                // Add active class to clicked button\n                button.classList.add(\"active\");\n                // Filter animals by category\n                $26b308b2c4cded8c$var$filterAnimalsByCategory(category.id);\n            };\n            button.addEventListener(\"click\", clickListener);\n            $26b308b2c4cded8c$var$eventListeners.push({\n                element: button,\n                type: \"click\",\n                listener: clickListener\n            });\n            categoriesContainer.appendChild(button);\n        });\n    });\n    animalsContainer.appendChild(categoriesContainer);\n    // Create container for animal cards\n    const animalCardsContainer = (0, $bsJMP.DOMUtils).createElement(\"div\", {\n        className: \"animal-cards-container\"\n    });\n    animalsContainer.appendChild(animalCardsContainer);\n    // Set \"All Animals\" as default active category\n    const allButton = document.querySelector('[data-category=\"all\"]');\n    if (allButton) allButton.classList.add(\"active\");\n    // Show all animals initially\n    $26b308b2c4cded8c$var$renderAnimalCards((0, $ioPRj.animalsData));\n}\n/**\n * Filter animals by category\n */ function $26b308b2c4cded8c$var$filterAnimalsByCategory(categoryId) {\n    const filteredAnimals = categoryId === \"all\" ? (0, $ioPRj.animalsData) : (0, $ioPRj.animalsData).filter((animal)=>animal.category === categoryId);\n    $26b308b2c4cded8c$var$renderAnimalCards(filteredAnimals);\n    console.log(\"Filtered to\", filteredAnimals.length, \"animals in category\", categoryId);\n}\n/**\n * Render animal cards with performance optimizations\n */ function $26b308b2c4cded8c$var$renderAnimalCards(animals) {\n    const animalCardsContainer = document.querySelector(\".animal-cards-container\");\n    if (!animalCardsContainer) {\n        console.error(\"Animal cards container not found\");\n        return;\n    }\n    // Clear container efficiently\n    (0, $bsJMP.DOMUtils).clearContainer(animalCardsContainer);\n    if (animals.length === 0) {\n        const noAnimalsMessage = (0, $bsJMP.DOMUtils).createElement(\"p\", {\n            className: \"no-animals-message\",\n            text: \"No animals found in this category\"\n        });\n        animalCardsContainer.appendChild(noAnimalsMessage);\n        return;\n    }\n    // Get service instances\n    const imageLoader = (0, $klKV5.ImageLoader).getInstance();\n    const audioLoader = (0, $jKkLD.AudioLoader).getInstance();\n    // Use document fragment for better performance\n    const fragment = document.createDocumentFragment();\n    // Create animal cards\n    animals.forEach((item)=>{\n        const animalCard = (0, $bsJMP.DOMUtils).createElement(\"div\", {\n            className: \"animal-card\",\n            attributes: {\n                \"aria-label\": item.name,\n                tabindex: \"0\"\n            }\n        });\n        animalCard.style.borderTop = `5px solid ${item.color}`;\n        // Use lazy loading for images\n        if (item.image) {\n            const animalImage = imageLoader.createLazyImage(item.image, item.name, \"animal-image\", item.color);\n            animalCard.appendChild(animalImage);\n        } else {\n            const animalEmoji = (0, $bsJMP.DOMUtils).createElement(\"div\", {\n                className: \"animal-emoji\",\n                text: item.emoji\n            });\n            animalCard.appendChild(animalEmoji);\n        }\n        const animalName = (0, $bsJMP.DOMUtils).createElement(\"div\", {\n            className: \"animal-name\",\n            text: item.name\n        });\n        animalName.style.backgroundColor = item.color;\n        const animalFact = (0, $bsJMP.DOMUtils).createElement(\"div\", {\n            className: \"animal-fact\",\n            text: item.fact\n        });\n        // Add sound button if sound is provided\n        if (item.sound) {\n            // Preload the sound file\n            audioLoader.loadAudio(item.sound);\n            const soundButton = (0, $bsJMP.DOMUtils).createElement(\"button\", {\n                className: \"animal-sound-button\",\n                html: \"\\uD83D\\uDD0A\",\n                attributes: {\n                    title: `Hear ${item.name} sound`,\n                    \"aria-label\": `Play ${item.name} sound`\n                }\n            });\n            // Add event listener and track it for cleanup\n            const soundClickListener = (e)=>{\n                e.stopPropagation(); // Prevent card click\n                audioLoader.playAudio(item.sound);\n            };\n            soundButton.addEventListener(\"click\", soundClickListener);\n            $26b308b2c4cded8c$var$eventListeners.push({\n                element: soundButton,\n                type: \"click\",\n                listener: soundClickListener\n            });\n            animalCard.appendChild(soundButton);\n        }\n        animalCard.appendChild(animalName);\n        animalCard.appendChild(animalFact);\n        // Add event listener and track it for cleanup\n        const cardClickListener = ()=>{\n            // Speak the animal name and fact\n            (0, $4yiPC.speakText)(`${item.name}. ${item.fact}`);\n            // Add animation class\n            animalCard.classList.add(\"active\");\n            setTimeout(()=>animalCard.classList.remove(\"active\"), 1000);\n        };\n        animalCard.addEventListener(\"click\", cardClickListener);\n        $26b308b2c4cded8c$var$eventListeners.push({\n            element: animalCard,\n            type: \"click\",\n            listener: cardClickListener\n        });\n        // Add keyboard support\n        const cardKeydownListener = (e)=>{\n            const keyEvent = e;\n            if (keyEvent.key === \"Enter\" || keyEvent.key === \" \") {\n                e.preventDefault();\n                cardClickListener();\n            }\n        };\n        animalCard.addEventListener(\"keydown\", cardKeydownListener);\n        $26b308b2c4cded8c$var$eventListeners.push({\n            element: animalCard,\n            type: \"keydown\",\n            listener: cardKeydownListener\n        });\n        fragment.appendChild(animalCard);\n    });\n    animalCardsContainer.appendChild(fragment);\n    console.log(\"Rendered\", animals.length, \"animal cards\");\n}\n\n});\n\n\n//# sourceMappingURL=animals.de36f27d.js.map\n","import { animalsData } from \"../common/data-content\";\nimport { getContainer } from \"../core/dom-elements\";\nimport { AudioLoader } from \"../core/audio-loader\";\nimport { ImageLoader } from \"../core/image-loader\";\nimport { DOMUtils } from \"../core/dom-utils\";\nimport { speakText } from \"../common/utils\";\n\n// Track event listeners for cleanup\nconst eventListeners: Array<{\n  element: HTMLElement;\n  type: string;\n  listener: EventListener;\n}> = [];\n\n/**\n * Initialize the animals section\n */\nexport function initialize(): void {\n  renderAnimalsSection();\n}\n\n/**\n * Clean up resources when section is hidden\n */\nexport function cleanup(): void {\n  eventListeners.forEach(({ element, type, listener }) => {\n    element.removeEventListener(type, listener);\n  });\n  eventListeners.length = 0;\n}\n\n/**\n * Render the animals section\n */\nfunction renderAnimalsSection(): void {\n  const animalsContainer = getContainer(\"animals-container\");\n\n  if (!animalsContainer) {\n    return;\n  }\n\n  // Clear the container efficiently\n  DOMUtils.clearContainer(animalsContainer);\n\n  // Create category buttons\n  const categoriesContainer = DOMUtils.createElement(\"div\", {\n    className: \"categories-container\",\n  });\n\n  const categories = [\n    { id: \"all\", name: \"All Animals\", emoji: \"🐾\" },\n    { id: \"farm\", name: \"Farm\", emoji: \"🐄\" },\n    { id: \"wild\", name: \"Wild\", emoji: \"🦁\" },\n    { id: \"pet\", name: \"Pets\", emoji: \"🐕\" },\n    { id: \"sea\", name: \"Sea\", emoji: \"🐠\" },\n    { id: \"insect\", name: \"Insects\", emoji: \"🐝\" },\n    { id: \"bird\", name: \"Birds\", emoji: \"🦉\" },\n  ];\n\n  // Use batch operation for better performance\n  DOMUtils.batchOperation(() => {\n    categories.forEach((category) => {\n      const button = DOMUtils.createElement(\"button\", {\n        className: \"category-button\",\n        attributes: {\n          \"data-category\": category.id,\n          \"aria-label\": `Show ${category.name} animals`,\n        },\n        html: `${category.emoji} ${category.name}`,\n      });\n\n      // Add event listener and track it for cleanup\n      const clickListener = () => {\n        // Remove active class from all buttons\n        document.querySelectorAll(\".category-button\").forEach((btn) => {\n          btn.classList.remove(\"active\");\n        });\n\n        // Add active class to clicked button\n        button.classList.add(\"active\");\n\n        // Filter animals by category\n        filterAnimalsByCategory(category.id);\n      };\n\n      button.addEventListener(\"click\", clickListener);\n      eventListeners.push({\n        element: button,\n        type: \"click\",\n        listener: clickListener,\n      });\n\n      categoriesContainer.appendChild(button);\n    });\n  });\n\n  animalsContainer.appendChild(categoriesContainer);\n\n  // Create container for animal cards\n  const animalCardsContainer = DOMUtils.createElement(\"div\", {\n    className: \"animal-cards-container\",\n  });\n  animalsContainer.appendChild(animalCardsContainer);\n\n  // Set \"All Animals\" as default active category\n  const allButton = document.querySelector(\n    '[data-category=\"all\"]',\n  ) as HTMLElement;\n  if (allButton) {\n    allButton.classList.add(\"active\");\n  }\n\n  // Show all animals initially\n  renderAnimalCards(animalsData);\n}\n\n/**\n * Filter animals by category\n */\nfunction filterAnimalsByCategory(categoryId: string): void {\n  const filteredAnimals =\n    categoryId === \"all\"\n      ? animalsData\n      : animalsData.filter((animal) => animal.category === categoryId);\n\n  renderAnimalCards(filteredAnimals);\n  console.log(\n    \"Filtered to\",\n    filteredAnimals.length,\n    \"animals in category\",\n    categoryId,\n  );\n}\n\n/**\n * Render animal cards with performance optimizations\n */\nfunction renderAnimalCards(animals: typeof animalsData): void {\n  const animalCardsContainer = document.querySelector(\n    \".animal-cards-container\",\n  ) as HTMLElement;\n  if (!animalCardsContainer) {\n    console.error(\"Animal cards container not found\");\n    return;\n  }\n\n  // Clear container efficiently\n  DOMUtils.clearContainer(animalCardsContainer);\n\n  if (animals.length === 0) {\n    const noAnimalsMessage = DOMUtils.createElement(\"p\", {\n      className: \"no-animals-message\",\n      text: \"No animals found in this category\",\n    });\n    animalCardsContainer.appendChild(noAnimalsMessage);\n    return;\n  }\n\n  // Get service instances\n  const imageLoader = ImageLoader.getInstance();\n  const audioLoader = AudioLoader.getInstance();\n\n  // Use document fragment for better performance\n  const fragment = document.createDocumentFragment();\n\n  // Create animal cards\n  animals.forEach((item) => {\n    const animalCard = DOMUtils.createElement(\"div\", {\n      className: \"animal-card\",\n      attributes: {\n        \"aria-label\": item.name,\n        tabindex: \"0\",\n      },\n    });\n    animalCard.style.borderTop = `5px solid ${item.color}`;\n\n    // Use lazy loading for images\n    if (item.image) {\n      const animalImage = imageLoader.createLazyImage(\n        item.image,\n        item.name,\n        \"animal-image\",\n        item.color,\n      );\n      animalCard.appendChild(animalImage);\n    } else {\n      const animalEmoji = DOMUtils.createElement(\"div\", {\n        className: \"animal-emoji\",\n        text: item.emoji,\n      });\n      animalCard.appendChild(animalEmoji);\n    }\n\n    const animalName = DOMUtils.createElement(\"div\", {\n      className: \"animal-name\",\n      text: item.name,\n    });\n    animalName.style.backgroundColor = item.color;\n\n    const animalFact = DOMUtils.createElement(\"div\", {\n      className: \"animal-fact\",\n      text: item.fact,\n    });\n\n    // Add sound button if sound is provided\n    if (item.sound) {\n      // Preload the sound file\n      audioLoader.loadAudio(item.sound);\n\n      const soundButton = DOMUtils.createElement(\"button\", {\n        className: \"animal-sound-button\",\n        html: \"🔊\",\n        attributes: {\n          title: `Hear ${item.name} sound`,\n          \"aria-label\": `Play ${item.name} sound`,\n        },\n      });\n\n      // Add event listener and track it for cleanup\n      const soundClickListener = (e: Event) => {\n        e.stopPropagation(); // Prevent card click\n        audioLoader.playAudio(item.sound as string);\n      };\n\n      soundButton.addEventListener(\"click\", soundClickListener);\n      eventListeners.push({\n        element: soundButton,\n        type: \"click\",\n        listener: soundClickListener,\n      });\n\n      animalCard.appendChild(soundButton);\n    }\n\n    animalCard.appendChild(animalName);\n    animalCard.appendChild(animalFact);\n\n    // Add event listener and track it for cleanup\n    const cardClickListener = () => {\n      // Speak the animal name and fact\n      speakText(`${item.name}. ${item.fact}`);\n\n      // Add animation class\n      animalCard.classList.add(\"active\");\n      setTimeout(() => animalCard.classList.remove(\"active\"), 1000);\n    };\n\n    animalCard.addEventListener(\"click\", cardClickListener);\n    eventListeners.push({\n      element: animalCard,\n      type: \"click\",\n      listener: cardClickListener,\n    });\n\n    // Add keyboard support\n    const cardKeydownListener = (e: Event) => {\n      const keyEvent = e as KeyboardEvent;\n      if (keyEvent.key === \"Enter\" || keyEvent.key === \" \") {\n        e.preventDefault();\n        cardClickListener();\n      }\n    };\n\n    animalCard.addEventListener(\"keydown\", cardKeydownListener);\n    eventListeners.push({\n      element: animalCard,\n      type: \"keydown\",\n      listener: cardKeydownListener,\n    });\n\n    fragment.appendChild(animalCard);\n  });\n\n  animalCardsContainer.appendChild(fragment);\n\n  console.log(\"Rendered\", animals.length, \"animal cards\");\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","$26b308b2c4cded8c$export$2a47f398eeff8b01","$26b308b2c4cded8c$export$de863c629cb9919d","$ioPRj","$hSXbD","$jKkLD","$klKV5","$bsJMP","$4yiPC","$26b308b2c4cded8c$var$eventListeners","$26b308b2c4cded8c$var$renderAnimalsSection","animalsContainer","getContainer","DOMUtils","clearContainer","categoriesContainer","createElement","className","categories","id","name","emoji","batchOperation","forEach","category","button","attributes","html","clickListener","document","querySelectorAll","btn","classList","remove","add","$26b308b2c4cded8c$var$filterAnimalsByCategory","categoryId","filteredAnimals","animalsData","filter","animal","$26b308b2c4cded8c$var$renderAnimalCards","console","log","length","addEventListener","push","element","type","listener","appendChild","animalCardsContainer","allButton","querySelector","removeEventListener","animals","error","noAnimalsMessage","text","imageLoader","ImageLoader","getInstance","audioLoader","AudioLoader","fragment","createDocumentFragment","item","animalCard","tabindex","style","borderTop","color","image","animalImage","createLazyImage","animalEmoji","animalName","backgroundColor","animalFact","fact","sound","loadAudio","soundButton","title","soundClickListener","stopPropagation","playAudio","cardClickListener","speakText","setTimeout","cardKeydownListener","keyEvent","key","preventDefault"],"version":3,"file":"animals.de36f27d.js.map"}