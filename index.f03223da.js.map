{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,W,I,E,A,G,E,G,E,E,O,C,U,I,E,A,G,E,GCEA,IAgBA,EACA,EAjBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,EASA,EARA,SAAiB,CAAE,EACjB,IAAI,EAAW,EAAQ,GAAG,CAAC,GAC3B,GAAI,AAAY,MAAZ,EACF,MAAM,AAAI,MAAM,oCAAsC,GAExD,OAAO,IAAI,IAAI,EAAS,IAAI,CAAE,EAAS,OAAO,EAAE,QAAQ,EAC1D,C,G,E,Q,S,C,C,C,E,E,E,O,C,a,I,G,E,E,O,C,a,I,G,E,E,O,C,kB,I,G,E,E,O,C,gB,I,G,E,E,O,C,e,I,GChBO,IAAM,EAAa,SAAS,gBAAgB,CAAC,eACvC,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAkB,SAAS,gBAAgB,CAAC,oBAC5C,EAAgB,SAAS,aAAa,CACjD,mBAgCK,SAAS,EAAa,CAAsB,EACjD,IAAM,EAAY,SAAS,aAAa,CAAC,CAAC,CAAC,EAAE,EAAA,CAAgB,EAI7D,OAHK,GACH,QAAQ,KAAK,CAAC,CAAC,WAAW,EAAE,EAAe,UAAU,CAAC,EAEjD,CACT,CAlCiC,SAAS,aAAa,CACrD,uBAE8B,SAAS,aAAa,CACpD,sBAE6B,SAAS,aAAa,CACnD,qBAE6B,SAAS,aAAa,CACnD,qBAEgC,SAAS,aAAa,CACtD,wBAE+B,SA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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/scripts/core/dom-elements.ts","node_modules/@parcel/runtime-js/lib/runtime-175d1a4fec9c25f6.js","node_modules/@parcel/runtime-js/lib/helpers/browser/esm-js-loader.js","node_modules/@parcel/runtime-js/lib/runtime-222a7b3241e82297.js","node_modules/@parcel/runtime-js/lib/runtime-5e8006e4914317f3.js","node_modules/@parcel/runtime-js/lib/runtime-b37b01874b10b77b.js","node_modules/@parcel/runtime-js/lib/runtime-58f24761e0ea2312.js","node_modules/@parcel/runtime-js/lib/runtime-4d97cc66187d1755.js","node_modules/@parcel/runtime-js/lib/runtime-b3587e469d8fc6e9.js","node_modules/@parcel/runtime-js/lib/runtime-575a0054e301694f.js","src/scripts/core/audio-loader.ts","src/scripts/core/image-loader.ts","node_modules/@parcel/runtime-js/lib/runtime-ea140e42fb177b38.js","src/scripts/core/main.ts","src/scripts/core/section-manager.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\n$parcel$export(module.exports, \"resolve\", () => $18c11f3350a906ea$export$f7ad0328861e2f03, (v) => $18c11f3350a906ea$export$f7ad0328861e2f03 = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error('Could not resolve bundle with id ' + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nparcelRegister(\"hSXbD\", function(module, exports) {\n\n$parcel$export(module.exports, \"navButtons\", () => $f05278dbb4ed5657$export$abff8b18f9460260);\n$parcel$export(module.exports, \"homeButton\", () => $f05278dbb4ed5657$export$77068e7a2b5653b0);\n$parcel$export(module.exports, \"contentSections\", () => $f05278dbb4ed5657$export$8984e35948b1b8cd);\n$parcel$export(module.exports, \"welcomeScreen\", () => $f05278dbb4ed5657$export$bb2b5c3157a19234);\n$parcel$export(module.exports, \"getContainer\", () => $f05278dbb4ed5657$export$49f5bf502122d4f7);\n/** DOM Elements */ const $f05278dbb4ed5657$export$abff8b18f9460260 = document.querySelectorAll(\".nav-button\");\nconst $f05278dbb4ed5657$export$77068e7a2b5653b0 = document.querySelector(\".home-button\");\nconst $f05278dbb4ed5657$export$8984e35948b1b8cd = document.querySelectorAll(\".section-content\");\nconst $f05278dbb4ed5657$export$bb2b5c3157a19234 = document.querySelector(\".welcome-screen\");\nconst $f05278dbb4ed5657$export$47a7adf446a632e9 = document.querySelector(\".alphabet-container\");\nconst $f05278dbb4ed5657$export$3ac5ab937a11008e = document.querySelector(\".numbers-container\");\nconst $f05278dbb4ed5657$export$ac93f740ed5bb970 = document.querySelector(\".colors-container\");\nconst $f05278dbb4ed5657$export$ef489bf0d19ded76 = document.querySelector(\".shapes-container\");\nconst $f05278dbb4ed5657$export$864a35f7515afa4b = document.querySelector(\".positions-container\");\nconst $f05278dbb4ed5657$export$af3455aef2c8527b = document.querySelector(\".emotions-container\");\nconst $f05278dbb4ed5657$export$7f5b07f5f3694697 = document.querySelector(\".bodyParts-container\");\nconst $f05278dbb4ed5657$export$bb8912422da5fb0 = document.querySelector(\".animals-container\");\nfunction $f05278dbb4ed5657$export$49f5bf502122d4f7(containerClass) {\n    const container = document.querySelector(`.${containerClass}`);\n    if (!container) console.error(`Container .${containerClass} not found`);\n    return container;\n}\n\n});\n\nparcelRegister(\"joNk2\", function(module, exports) {\n\nvar $Gr8vk = parcelRequire(\"Gr8vk\");\nmodule.exports = Promise.all([\n    $Gr8vk(\"m8Jzg\"),\n    $Gr8vk(\"d4DOF\")\n]).then(()=>parcelRequire('a3vnr'));\n\n});\nparcelRegister(\"Gr8vk\", function(module, exports) {\n\"use strict\";\n\nfunction $07f8f9093a769793$var$load(id) {\n    // eslint-disable-next-line no-undef\n    return import((parcelRequire(\"27Lyk\")).resolve(id));\n}\nmodule.exports = $07f8f9093a769793$var$load;\n\n});\n\n\nparcelRegister(\"av3Da\", function(module, exports) {\n\nvar $Gr8vk = parcelRequire(\"Gr8vk\");\nmodule.exports = Promise.all([\n    $Gr8vk(\"m8Jzg\"),\n    $Gr8vk(\"bGxPb\")\n]).then(()=>parcelRequire('768Kh'));\n\n});\n\nparcelRegister(\"3kfaP\", function(module, exports) {\n\nvar $Gr8vk = parcelRequire(\"Gr8vk\");\nmodule.exports = Promise.all([\n    $Gr8vk(\"m8Jzg\"),\n    $Gr8vk(\"hmjq8\")\n]).then(()=>parcelRequire('9S8IL'));\n\n});\n\nparcelRegister(\"9dfmd\", function(module, exports) {\n\nvar $Gr8vk = parcelRequire(\"Gr8vk\");\nmodule.exports = Promise.all([\n    $Gr8vk(\"m8Jzg\"),\n    $Gr8vk(\"dUMob\")\n]).then(()=>parcelRequire('hh1DO'));\n\n});\n\nparcelRegister(\"9GxVA\", function(module, exports) {\n\nvar $Gr8vk = parcelRequire(\"Gr8vk\");\nmodule.exports = Promise.all([\n    $Gr8vk(\"m8Jzg\"),\n    $Gr8vk(\"1g7a5\")\n]).then(()=>parcelRequire('gMsGi'));\n\n});\n\nparcelRegister(\"kWyaT\", function(module, exports) {\n\nvar $Gr8vk = parcelRequire(\"Gr8vk\");\nmodule.exports = Promise.all([\n    $Gr8vk(\"m8Jzg\"),\n    $Gr8vk(\"l55IR\")\n]).then(()=>parcelRequire('dQH3V'));\n\n});\n\nparcelRegister(\"l18sG\", function(module, exports) {\n\nvar $Gr8vk = parcelRequire(\"Gr8vk\");\nmodule.exports = Promise.all([\n    $Gr8vk(\"m8Jzg\"),\n    $Gr8vk(\"cfXSD\")\n]).then(()=>parcelRequire('h6k7v'));\n\n});\n\nparcelRegister(\"kHR7i\", function(module, exports) {\n\nvar $Gr8vk = parcelRequire(\"Gr8vk\");\nmodule.exports = Promise.all([\n    $Gr8vk(\"m8Jzg\"),\n    $Gr8vk(\"kEDhS\")\n]).then(()=>parcelRequire('5T61B'));\n\n});\n\nparcelRegister(\"jKkLD\", function(module, exports) {\n\n$parcel$export(module.exports, \"AudioLoader\", () => $fd3dfe73c6bea222$export$d8d5fccfbf47714e);\n/**\n * Service for efficient audio loading and playback\n */ class $fd3dfe73c6bea222$export$d8d5fccfbf47714e {\n    /**\n   * Get the singleton instance\n   */ static getInstance() {\n        if (!$fd3dfe73c6bea222$export$d8d5fccfbf47714e.instance) $fd3dfe73c6bea222$export$d8d5fccfbf47714e.instance = new $fd3dfe73c6bea222$export$d8d5fccfbf47714e();\n        return $fd3dfe73c6bea222$export$d8d5fccfbf47714e.instance;\n    }\n    /**\n   * Private constructor for singleton pattern\n   */ constructor(){\n        this.audioCache = new Map();\n        this.loadingPromises = new Map();\n        this.isEnabled = true;\n        // Check if audio is supported\n        this.isEnabled = typeof Audio !== \"undefined\";\n        // Handle cleanup on page unload\n        window.addEventListener(\"beforeunload\", ()=>{\n            this.cleanup();\n        });\n    }\n    /**\n   * Load an audio file\n   * @param src The audio file path\n   */ loadAudio(src) {\n        // Return from cache if available\n        if (this.audioCache.has(src)) return Promise.resolve(this.audioCache.get(src));\n        // Return existing promise if already loading\n        if (this.loadingPromises.has(src)) return this.loadingPromises.get(src);\n        // Create new loading promise\n        const loadingPromise = new Promise((resolve, reject)=>{\n            if (!this.isEnabled) {\n                reject(new Error(\"Audio is not supported in this browser\"));\n                return;\n            }\n            const audio = new Audio(src);\n            audio.addEventListener(\"canplaythrough\", ()=>{\n                this.audioCache.set(src, audio);\n                this.loadingPromises.delete(src);\n                resolve(audio);\n            }, {\n                once: true\n            });\n            audio.addEventListener(\"error\", ()=>{\n                this.loadingPromises.delete(src);\n                reject(new Error(`Failed to load audio: ${src}`));\n            }, {\n                once: true\n            });\n            // Start loading\n            audio.load();\n        });\n        this.loadingPromises.set(src, loadingPromise);\n        return loadingPromise;\n    }\n    /**\n   * Play an audio file\n   * @param src The audio file path\n   * @param volume Optional volume (0.0 to 1.0)\n   */ async playAudio(src, volume = 1.0) {\n        if (!this.isEnabled) {\n            console.warn(\"Audio is not supported in this browser\");\n            return;\n        }\n        try {\n            // Load the audio if not already loaded\n            const audio = await this.loadAudio(src);\n            // Reset audio to beginning if it was already playing\n            audio.currentTime = 0;\n            audio.volume = Math.max(0, Math.min(1, volume));\n            // Play the audio\n            const playPromise = audio.play();\n            // Handle play promise (required for modern browsers)\n            if (playPromise !== undefined) playPromise.catch((error)=>{\n                console.error(\"Error playing audio:\", error);\n            });\n        } catch (error) {\n            console.error(\"Error loading audio:\", error);\n        }\n    }\n    /**\n   * Preload multiple audio files\n   * @param sources Array of audio file paths\n   */ preloadAudioFiles(sources) {\n        return Promise.all(sources.map((src)=>this.loadAudio(src)));\n    }\n    /**\n   * Enable or disable audio\n   * @param enabled Whether audio should be enabled\n   */ setEnabled(enabled) {\n        this.isEnabled = enabled;\n    }\n    /**\n   * Check if audio is enabled\n   */ isAudioEnabled() {\n        return this.isEnabled;\n    }\n    /**\n   * Clean up resources\n   */ cleanup() {\n        // Stop all playing audio\n        this.audioCache.forEach((audio)=>{\n            audio.pause();\n            audio.currentTime = 0;\n        });\n        // Clear caches\n        this.audioCache.clear();\n        this.loadingPromises.clear();\n    }\n}\n\n});\n\nparcelRegister(\"klKV5\", function(module, exports) {\n\n$parcel$export(module.exports, \"ImageLoader\", () => $3e794dc041d493b9$export$8905ce1c7a2464a1);\n/**\n * Service for lazy loading images\n */ class $3e794dc041d493b9$export$8905ce1c7a2464a1 {\n    /**\n   * Get the singleton instance\n   */ static getInstance() {\n        if (!$3e794dc041d493b9$export$8905ce1c7a2464a1.instance) $3e794dc041d493b9$export$8905ce1c7a2464a1.instance = new $3e794dc041d493b9$export$8905ce1c7a2464a1();\n        return $3e794dc041d493b9$export$8905ce1c7a2464a1.instance;\n    }\n    /**\n   * Private constructor for singleton pattern\n   */ constructor(){\n        this.loadedImages = new Set();\n        this.lowQualityPlaceholders = new Map();\n        // Create intersection observer for lazy loading\n        this.observer = new IntersectionObserver(this.onIntersection.bind(this), {\n            rootMargin: \"50px 0px\",\n            threshold: 0.01\n        });\n        // Handle cleanup on page unload\n        window.addEventListener(\"beforeunload\", ()=>{\n            this.observer.disconnect();\n        });\n    }\n    /**\n   * Handle intersection events\n   */ onIntersection(entries) {\n        entries.forEach((entry)=>{\n            if (entry.isIntersecting) {\n                const lazyImage = entry.target;\n                const src = lazyImage.dataset.src;\n                if (src) {\n                    this.loadImage(lazyImage, src);\n                    this.observer.unobserve(lazyImage);\n                }\n            }\n        });\n    }\n    /**\n   * Load an image\n   */ loadImage(imgElement, src) {\n        // Create a new image to load in background\n        const img = new Image();\n        // Set up load event\n        img.onload = ()=>{\n            imgElement.src = src;\n            imgElement.classList.add(\"loaded\");\n            this.loadedImages.add(src);\n            // Remove data-src to indicate it's loaded\n            delete imgElement.dataset.src;\n        };\n        // Set up error event\n        img.onerror = ()=>{\n            console.error(`Failed to load image: ${src}`);\n            // Keep the placeholder or set a fallback\n            imgElement.classList.add(\"error\");\n        };\n        // Start loading\n        img.src = src;\n    }\n    /**\n   * Create a lazy-loaded image element\n   */ createLazyImage(src, alt, className = \"\", placeholderColor = \"#f0f0f0\") {\n        const imgElement = document.createElement(\"img\");\n        // Set basic attributes\n        imgElement.alt = alt;\n        if (className) imgElement.className = className;\n        // Check if image is already loaded\n        if (this.loadedImages.has(src)) {\n            imgElement.src = src;\n            imgElement.classList.add(\"loaded\");\n        } else {\n            // Set placeholder and data-src\n            imgElement.src = this.getLowQualityPlaceholder(src) || `data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1 1' width='40' height='40'%3E%3Crect width='1' height='1' fill='${placeholderColor.replace(\"#\", \"%23\")}' /%3E%3C/svg%3E`;\n            imgElement.dataset.src = src;\n            imgElement.classList.add(\"lazy\");\n            // Start observing\n            this.observer.observe(imgElement);\n        }\n        return imgElement;\n    }\n    /**\n   * Get or create a low quality placeholder\n   */ getLowQualityPlaceholder(src) {\n        return this.lowQualityPlaceholders.get(src);\n    }\n    /**\n   * Set a low quality placeholder for an image\n   */ setLowQualityPlaceholder(src, placeholderSrc) {\n        this.lowQualityPlaceholders.set(src, placeholderSrc);\n    }\n    /**\n   * Preload an image without displaying it\n   */ preloadImage(src) {\n        return new Promise((resolve, reject)=>{\n            // Skip if already loaded\n            if (this.loadedImages.has(src)) {\n                resolve();\n                return;\n            }\n            const img = new Image();\n            img.onload = ()=>{\n                this.loadedImages.add(src);\n                resolve();\n            };\n            img.onerror = ()=>{\n                reject(new Error(`Failed to preload image: ${src}`));\n            };\n            img.src = src;\n        });\n    }\n    /**\n   * Preload multiple images\n   */ preloadImages(sources) {\n        return Promise.all(sources.map((src)=>this.preloadImage(src)));\n    }\n}\n\n});\n\nvar $18c6c7b38af0d1e2$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse(\"[\\\"fTMOD\\\",\\\"index.f03223da.js\\\",\\\"d4DOF\\\",\\\"alphabet.d83bd539.js\\\",\\\"m8Jzg\\\",\\\"alphabet.c2a0c3b4.js\\\",\\\"bGxPb\\\",\\\"numbers.f9790d7e.js\\\",\\\"hmjq8\\\",\\\"colors.60620428.js\\\",\\\"dUMob\\\",\\\"shapes.e3ebbdf2.js\\\",\\\"1g7a5\\\",\\\"positions.577f4bd1.js\\\",\\\"l55IR\\\",\\\"emotions.0941e5e8.js\\\",\\\"cfXSD\\\",\\\"bodyParts.8de34b1d.js\\\",\\\"kEDhS\\\",\\\"animals.de36f27d.js\\\"]\"));\n\n\nvar $hSXbD = parcelRequire(\"hSXbD\");\n\nvar $hSXbD = parcelRequire(\"hSXbD\");\n\n\n\n\n\n\n\n\nclass $5f506ee8656cc3a6$export$aa1a34588e698e70 {\n    /**\n   * Get the singleton instance\n   */ static getInstance() {\n        if (!$5f506ee8656cc3a6$export$aa1a34588e698e70.instance) $5f506ee8656cc3a6$export$aa1a34588e698e70.instance = new $5f506ee8656cc3a6$export$aa1a34588e698e70();\n        return $5f506ee8656cc3a6$export$aa1a34588e698e70.instance;\n    }\n    /**\n   * Private constructor for singleton pattern\n   */ constructor(){\n        this.currentSection = null;\n        this.loadedSections = new Map();\n        this.initializationPromises = new Map();\n    }\n    /**\n   * Switch to a different section\n   * @param sectionName The section to switch to, or undefined for welcome screen\n   */ async switchSection(sectionName) {\n        console.log(`Switching to section: ${sectionName || \"welcome\"}`);\n        // Clean up current section if it exists and has a cleanup method\n        if (this.currentSection && this.loadedSections.has(this.currentSection)) {\n            const currentModule = this.loadedSections.get(this.currentSection);\n            currentModule?.cleanup?.();\n        }\n        // Hide all sections\n        (0, $hSXbD.welcomeScreen).classList.remove(\"active\");\n        (0, $hSXbD.contentSections).forEach((section)=>section.classList.remove(\"active\"));\n        // Show welcome screen if no section specified\n        if (!sectionName) {\n            (0, $hSXbD.welcomeScreen).classList.add(\"active\");\n            this.currentSection = null;\n            return;\n        }\n        // Show and initialize the requested section\n        const selectedSection = document.getElementById(`${sectionName}-section`);\n        if (selectedSection) {\n            selectedSection.classList.add(\"active\");\n            try {\n                await this.loadAndInitializeSection(sectionName);\n                this.currentSection = sectionName;\n            } catch (error) {\n                console.error(`Error loading section ${sectionName}:`, error);\n                (0, $hSXbD.welcomeScreen).classList.add(\"active\");\n                this.currentSection = null;\n            }\n        } else {\n            console.error(`Section element #${sectionName}-section not found`);\n            (0, $hSXbD.welcomeScreen).classList.add(\"active\");\n            this.currentSection = null;\n        }\n    }\n    /**\n   * Lazy load and initialize a section\n   * @param sectionName The section name to load\n   */ async loadAndInitializeSection(sectionName) {\n        if (this.loadedSections.has(sectionName)) return this.loadedSections.get(sectionName);\n        if (this.initializationPromises.has(sectionName)) return this.initializationPromises.get(sectionName);\n        const loadingPromise = this.importAndInitializeSection(sectionName);\n        this.initializationPromises.set(sectionName, loadingPromise);\n        try {\n            const module = await loadingPromise;\n            this.loadedSections.set(sectionName, module);\n            this.initializationPromises.delete(sectionName);\n            return module;\n        } catch (error) {\n            this.initializationPromises.delete(sectionName);\n            throw error;\n        }\n    }\n    /**\n   * Import a section module dynamically and initialize it\n   * @param sectionName The section name to import\n   */ async importAndInitializeSection(sectionName) {\n        const sectionImports = {\n            alphabet: ()=>(parcelRequire(\"joNk2\")),\n            numbers: ()=>(parcelRequire(\"av3Da\")),\n            colors: ()=>(parcelRequire(\"3kfaP\")),\n            shapes: ()=>(parcelRequire(\"9dfmd\")),\n            positions: ()=>(parcelRequire(\"9GxVA\")),\n            emotions: ()=>(parcelRequire(\"kWyaT\")),\n            bodyParts: ()=>(parcelRequire(\"l18sG\")),\n            animals: ()=>(parcelRequire(\"kHR7i\"))\n        };\n        try {\n            const module = await sectionImports[sectionName]();\n            if (typeof module.initialize === \"function\") {\n                module.initialize();\n                return {\n                    initialize: module.initialize,\n                    cleanup: module.cleanup\n                };\n            } else throw new Error(`Section module ${sectionName} does not have an initialize function`);\n        } catch (error) {\n            console.error(`Failed to import section ${sectionName}:`, error);\n            throw error;\n        }\n    }\n    /**\n   * Preload a section without displaying it\n   * @param sectionName The section to preload\n   */ async preloadSection(sectionName) {\n        return this.loadAndInitializeSection(sectionName).then(()=>{\n            console.log(`Section ${sectionName} preloaded successfully`);\n        });\n    }\n    /**\n   * Get the current active section name\n   */ getCurrentSection() {\n        return this.currentSection;\n    }\n}\n\n\n\nvar $jKkLD = parcelRequire(\"jKkLD\");\n\nvar $klKV5 = parcelRequire(\"klKV5\");\n/**\n * Initialize the app\n */ async function $551d308b9607047a$var$initApp() {\n    console.log(\"Initializing preschool learning app...\");\n    // Initialize services\n    const sectionManager = (0, $5f506ee8656cc3a6$export$aa1a34588e698e70).getInstance();\n    const audioLoader = (0, $jKkLD.AudioLoader).getInstance();\n    const imageLoader = (0, $klKV5.ImageLoader).getInstance();\n    // Add event listener to home button\n    if (0, $hSXbD.homeButton) (0, $hSXbD.homeButton).addEventListener(\"click\", ()=>{\n        sectionManager.switchSection(undefined);\n    });\n    // Add event listeners to navigation buttons\n    (0, $hSXbD.navButtons).forEach((button)=>{\n        button.addEventListener(\"click\", ()=>{\n            const section = button.dataset.section;\n            if (section) sectionManager.switchSection(section);\n        });\n    });\n    // Add mascot interaction - the owl\n    const mascot = document.getElementById(\"mascot\");\n    if (mascot) mascot.addEventListener(\"click\", ()=>{\n        // audioLoader.playAudio('assets/sounds/welcome.mp3');\n        mascot.classList.add(\"bounce\");\n        setTimeout(()=>mascot.classList.remove(\"bounce\"), 1000);\n    });\n    // Preload common assets\n    // try {\n    //     // Preload welcome screen assets\n    //     await Promise.all([\n    //         imageLoader.preloadImage('./assets/welcome.svg'),\n    //         audioLoader.loadAudio('assets/sounds/welcome.mp3')\n    //     ]);\n    // } catch (error) {\n    //     console.error('Error during app initialization:', error);\n    // }\n    try {\n        // Show welcome screen\n        await sectionManager.switchSection(undefined);\n        // Preload first section (alphabet) in the background\n        // sectionManager.preloadSection('alphabet');\n        console.log(\"App initialization complete\");\n    } catch (error) {\n        console.error(\"Error during app initialization:\", error);\n    }\n}\n/**\n * Initialize the app when the DOM is loaded\n */ document.addEventListener(\"DOMContentLoaded\", $551d308b9607047a$var$initApp);\n\n\n//# sourceMappingURL=index.f03223da.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","/** DOM Elements */\nexport const navButtons = document.querySelectorAll(\".nav-button\");\nexport const homeButton = document.querySelector(\".home-button\") as HTMLElement;\nexport const contentSections = document.querySelectorAll(\".section-content\");\nexport const welcomeScreen = document.querySelector(\n  \".welcome-screen\",\n) as HTMLElement;\n\n//Cards\nexport const alphabetContainer = document.querySelector(\n  \".alphabet-container\",\n) as HTMLElement;\nexport const numbersContainer = document.querySelector(\n  \".numbers-container\",\n) as HTMLElement;\nexport const colorsContainer = document.querySelector(\n  \".colors-container\",\n) as HTMLElement;\nexport const shapesContainer = document.querySelector(\n  \".shapes-container\",\n) as HTMLElement;\nexport const positionsContainer = document.querySelector(\n  \".positions-container\",\n) as HTMLElement;\nexport const emotionsContainer = document.querySelector(\n  \".emotions-container\",\n) as HTMLElement;\nexport const bodyPartsContainer = document.querySelector(\n  \".bodyParts-container\",\n) as HTMLElement;\nexport const animalsContainer = document.querySelector(\n  \".animals-container\",\n) as HTMLElement;\n\n/*\n * Get container elements when needed\n */\nexport function getContainer(containerClass: string): HTMLElement {\n  const container = document.querySelector(`.${containerClass}`) as HTMLElement;\n  if (!container) {\n    console.error(`Container .${containerClass} not found`);\n  }\n  return container;\n}\n","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = Promise.all([load(\"m8Jzg\"), load(\"d4DOF\")]).then(() => parcelRequire('a3vnr'));","\"use strict\";\n\nfunction load(id) {\n  // eslint-disable-next-line no-undef\n  return __parcel__import__(require('../bundle-manifest').resolve(id));\n}\nmodule.exports = load;","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = Promise.all([load(\"m8Jzg\"), load(\"bGxPb\")]).then(() => parcelRequire('768Kh'));","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = Promise.all([load(\"m8Jzg\"), load(\"hmjq8\")]).then(() => parcelRequire('9S8IL'));","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = Promise.all([load(\"m8Jzg\"), load(\"dUMob\")]).then(() => parcelRequire('hh1DO'));","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = Promise.all([load(\"m8Jzg\"), load(\"1g7a5\")]).then(() => parcelRequire('gMsGi'));","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = Promise.all([load(\"m8Jzg\"), load(\"l55IR\")]).then(() => parcelRequire('dQH3V'));","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = Promise.all([load(\"m8Jzg\"), load(\"cfXSD\")]).then(() => parcelRequire('h6k7v'));","let load = require('./helpers/browser/esm-js-loader');\nmodule.exports = Promise.all([load(\"m8Jzg\"), load(\"kEDhS\")]).then(() => parcelRequire('5T61B'));","/**\n * Service for efficient audio loading and playback\n */\nexport class AudioLoader {\n  private static instance: AudioLoader;\n  private audioCache: Map<string, HTMLAudioElement> = new Map();\n  private loadingPromises: Map<string, Promise<HTMLAudioElement>> = new Map();\n  private isEnabled: boolean = true;\n\n  /**\n   * Get the singleton instance\n   */\n  public static getInstance(): AudioLoader {\n    if (!AudioLoader.instance) {\n      AudioLoader.instance = new AudioLoader();\n    }\n    return AudioLoader.instance;\n  }\n\n  /**\n   * Private constructor for singleton pattern\n   */\n  private constructor() {\n    // Check if audio is supported\n    this.isEnabled = typeof Audio !== \"undefined\";\n\n    // Handle cleanup on page unload\n    window.addEventListener(\"beforeunload\", () => {\n      this.cleanup();\n    });\n  }\n\n  /**\n   * Load an audio file\n   * @param src The audio file path\n   */\n  public loadAudio(src: string): Promise<HTMLAudioElement> {\n    // Return from cache if available\n    if (this.audioCache.has(src)) {\n      return Promise.resolve(this.audioCache.get(src)!);\n    }\n\n    // Return existing promise if already loading\n    if (this.loadingPromises.has(src)) {\n      return this.loadingPromises.get(src)!;\n    }\n\n    // Create new loading promise\n    const loadingPromise = new Promise<HTMLAudioElement>((resolve, reject) => {\n      if (!this.isEnabled) {\n        reject(new Error(\"Audio is not supported in this browser\"));\n        return;\n      }\n\n      const audio = new Audio(src);\n\n      audio.addEventListener(\n        \"canplaythrough\",\n        () => {\n          this.audioCache.set(src, audio);\n          this.loadingPromises.delete(src);\n          resolve(audio);\n        },\n        { once: true },\n      );\n\n      audio.addEventListener(\n        \"error\",\n        () => {\n          this.loadingPromises.delete(src);\n          reject(new Error(`Failed to load audio: ${src}`));\n        },\n        { once: true },\n      );\n\n      // Start loading\n      audio.load();\n    });\n\n    this.loadingPromises.set(src, loadingPromise);\n    return loadingPromise;\n  }\n\n  /**\n   * Play an audio file\n   * @param src The audio file path\n   * @param volume Optional volume (0.0 to 1.0)\n   */\n  public async playAudio(src: string, volume: number = 1.0): Promise<void> {\n    if (!this.isEnabled) {\n      console.warn(\"Audio is not supported in this browser\");\n      return;\n    }\n\n    try {\n      // Load the audio if not already loaded\n      const audio = await this.loadAudio(src);\n\n      // Reset audio to beginning if it was already playing\n      audio.currentTime = 0;\n      audio.volume = Math.max(0, Math.min(1, volume));\n\n      // Play the audio\n      const playPromise = audio.play();\n\n      // Handle play promise (required for modern browsers)\n      if (playPromise !== undefined) {\n        playPromise.catch((error) => {\n          console.error(\"Error playing audio:\", error);\n        });\n      }\n    } catch (error) {\n      console.error(\"Error loading audio:\", error);\n    }\n  }\n\n  /**\n   * Preload multiple audio files\n   * @param sources Array of audio file paths\n   */\n  public preloadAudioFiles(sources: string[]): Promise<HTMLAudioElement[]> {\n    return Promise.all(sources.map((src) => this.loadAudio(src)));\n  }\n\n  /**\n   * Enable or disable audio\n   * @param enabled Whether audio should be enabled\n   */\n  public setEnabled(enabled: boolean): void {\n    this.isEnabled = enabled;\n  }\n\n  /**\n   * Check if audio is enabled\n   */\n  public isAudioEnabled(): boolean {\n    return this.isEnabled;\n  }\n\n  /**\n   * Clean up resources\n   */\n  public cleanup(): void {\n    // Stop all playing audio\n    this.audioCache.forEach((audio) => {\n      audio.pause();\n      audio.currentTime = 0;\n    });\n\n    // Clear caches\n    this.audioCache.clear();\n    this.loadingPromises.clear();\n  }\n}\n","/**\n * Service for lazy loading images\n */\nexport class ImageLoader {\n  private static instance: ImageLoader;\n  private observer: IntersectionObserver;\n  private loadedImages: Set<string> = new Set();\n  private lowQualityPlaceholders: Map<string, string> = new Map();\n\n  /**\n   * Get the singleton instance\n   */\n  public static getInstance(): ImageLoader {\n    if (!ImageLoader.instance) {\n      ImageLoader.instance = new ImageLoader();\n    }\n    return ImageLoader.instance;\n  }\n\n  /**\n   * Private constructor for singleton pattern\n   */\n  private constructor() {\n    // Create intersection observer for lazy loading\n    this.observer = new IntersectionObserver(this.onIntersection.bind(this), {\n      rootMargin: \"50px 0px\",\n      threshold: 0.01,\n    });\n\n    // Handle cleanup on page unload\n    window.addEventListener(\"beforeunload\", () => {\n      this.observer.disconnect();\n    });\n  }\n\n  /**\n   * Handle intersection events\n   */\n  private onIntersection(entries: IntersectionObserverEntry[]): void {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        const lazyImage = entry.target as HTMLImageElement;\n        const src = lazyImage.dataset.src;\n\n        if (src) {\n          this.loadImage(lazyImage, src);\n          this.observer.unobserve(lazyImage);\n        }\n      }\n    });\n  }\n\n  /**\n   * Load an image\n   */\n  private loadImage(imgElement: HTMLImageElement, src: string): void {\n    // Create a new image to load in background\n    const img = new Image();\n\n    // Set up load event\n    img.onload = () => {\n      imgElement.src = src;\n      imgElement.classList.add(\"loaded\");\n      this.loadedImages.add(src);\n\n      // Remove data-src to indicate it's loaded\n      delete imgElement.dataset.src;\n    };\n\n    // Set up error event\n    img.onerror = () => {\n      console.error(`Failed to load image: ${src}`);\n      // Keep the placeholder or set a fallback\n      imgElement.classList.add(\"error\");\n    };\n\n    // Start loading\n    img.src = src;\n  }\n\n  /**\n   * Create a lazy-loaded image element\n   */\n  public createLazyImage(\n    src: string,\n    alt: string,\n    className: string = \"\",\n    placeholderColor: string = \"#f0f0f0\",\n  ): HTMLImageElement {\n    const imgElement = document.createElement(\"img\");\n\n    // Set basic attributes\n    imgElement.alt = alt;\n    if (className) {\n      imgElement.className = className;\n    }\n\n    // Check if image is already loaded\n    if (this.loadedImages.has(src)) {\n      imgElement.src = src;\n      imgElement.classList.add(\"loaded\");\n    } else {\n      // Set placeholder and data-src\n      imgElement.src =\n        this.getLowQualityPlaceholder(src) ||\n        `data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1 1' width='40' height='40'%3E%3Crect width='1' height='1' fill='${placeholderColor.replace(\"#\", \"%23\")}' /%3E%3C/svg%3E`;\n      imgElement.dataset.src = src;\n      imgElement.classList.add(\"lazy\");\n\n      // Start observing\n      this.observer.observe(imgElement);\n    }\n\n    return imgElement;\n  }\n\n  /**\n   * Get or create a low quality placeholder\n   */\n  private getLowQualityPlaceholder(src: string): string | undefined {\n    return this.lowQualityPlaceholders.get(src);\n  }\n\n  /**\n   * Set a low quality placeholder for an image\n   */\n  public setLowQualityPlaceholder(src: string, placeholderSrc: string): void {\n    this.lowQualityPlaceholders.set(src, placeholderSrc);\n  }\n\n  /**\n   * Preload an image without displaying it\n   */\n  public preloadImage(src: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      // Skip if already loaded\n      if (this.loadedImages.has(src)) {\n        resolve();\n        return;\n      }\n\n      const img = new Image();\n      img.onload = () => {\n        this.loadedImages.add(src);\n        resolve();\n      };\n      img.onerror = () => {\n        reject(new Error(`Failed to preload image: ${src}`));\n      };\n      img.src = src;\n    });\n  }\n\n  /**\n   * Preload multiple images\n   */\n  public preloadImages(sources: string[]): Promise<void[]> {\n    return Promise.all(sources.map((src) => this.preloadImage(src)));\n  }\n}\n","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"fTMOD\\\",\\\"index.f03223da.js\\\",\\\"d4DOF\\\",\\\"alphabet.d83bd539.js\\\",\\\"m8Jzg\\\",\\\"alphabet.c2a0c3b4.js\\\",\\\"bGxPb\\\",\\\"numbers.f9790d7e.js\\\",\\\"hmjq8\\\",\\\"colors.60620428.js\\\",\\\"dUMob\\\",\\\"shapes.e3ebbdf2.js\\\",\\\"1g7a5\\\",\\\"positions.577f4bd1.js\\\",\\\"l55IR\\\",\\\"emotions.0941e5e8.js\\\",\\\"cfXSD\\\",\\\"bodyParts.8de34b1d.js\\\",\\\"kEDhS\\\",\\\"animals.de36f27d.js\\\"]\"));","import { homeButton, navButtons } from \"./dom-elements\";\nimport { SectionManager } from \"./section-manager\";\nimport { AudioLoader } from \"./audio-loader\";\nimport { ImageLoader } from \"./image-loader\";\n\n/**\n * Initialize the app\n */\nasync function initApp(): Promise<void> {\n  console.log(\"Initializing preschool learning app...\");\n\n  // Initialize services\n  const sectionManager = SectionManager.getInstance();\n  const audioLoader = AudioLoader.getInstance();\n  const imageLoader = ImageLoader.getInstance();\n\n  // Add event listener to home button\n  if (homeButton) {\n    homeButton.addEventListener(\"click\", () => {\n      sectionManager.switchSection(undefined);\n    });\n  }\n\n  // Add event listeners to navigation buttons\n  navButtons.forEach((button) => {\n    button.addEventListener(\"click\", () => {\n      const section = (button as HTMLElement).dataset.section;\n      if (section) {\n        sectionManager.switchSection(section);\n      }\n    });\n  });\n\n  // Add mascot interaction - the owl\n  const mascot = document.getElementById(\"mascot\");\n  if (mascot) {\n    mascot.addEventListener(\"click\", () => {\n      // audioLoader.playAudio('assets/sounds/welcome.mp3');\n      mascot.classList.add(\"bounce\");\n      setTimeout(() => mascot.classList.remove(\"bounce\"), 1000);\n    });\n  }\n\n  // Preload common assets\n  // try {\n  //     // Preload welcome screen assets\n  //     await Promise.all([\n  //         imageLoader.preloadImage('./assets/welcome.svg'),\n  //         audioLoader.loadAudio('assets/sounds/welcome.mp3')\n  //     ]);\n  // } catch (error) {\n  //     console.error('Error during app initialization:', error);\n  // }\n\n  try {\n    // Show welcome screen\n    await sectionManager.switchSection(undefined);\n\n    // Preload first section (alphabet) in the background\n    // sectionManager.preloadSection('alphabet');\n\n    console.log(\"App initialization complete\");\n  } catch (error) {\n    console.error(\"Error during app initialization:\", error);\n  }\n}\n\n/**\n * Initialize the app when the DOM is loaded\n */\ndocument.addEventListener(\"DOMContentLoaded\", initApp);\n","import { contentSections, welcomeScreen } from \"./dom-elements\";\n\n/**\n * Interface for section modules\n */\nexport interface SectionModule {\n  initialize: () => void;\n  cleanup?: () => void;\n}\n\n/**\n * Manages section loading, initialization, and cleanup\n */\nexport class SectionManager {\n  private static instance: SectionManager;\n  private currentSection: string | null = null;\n  private loadedSections: Map<string, SectionModule> = new Map();\n  private initializationPromises: Map<string, Promise<SectionModule>> =\n    new Map();\n\n  /**\n   * Get the singleton instance\n   */\n  public static getInstance(): SectionManager {\n    if (!SectionManager.instance) {\n      SectionManager.instance = new SectionManager();\n    }\n    return SectionManager.instance;\n  }\n\n  /**\n   * Private constructor for singleton pattern\n   */\n  private constructor() {}\n\n  /**\n   * Switch to a different section\n   * @param sectionName The section to switch to, or undefined for welcome screen\n   */\n  public async switchSection(sectionName: string | undefined): Promise<void> {\n    console.log(`Switching to section: ${sectionName || \"welcome\"}`);\n\n    // Clean up current section if it exists and has a cleanup method\n    if (this.currentSection && this.loadedSections.has(this.currentSection)) {\n      const currentModule = this.loadedSections.get(this.currentSection);\n      currentModule?.cleanup?.();\n    }\n\n    // Hide all sections\n    welcomeScreen.classList.remove(\"active\");\n    contentSections.forEach((section) => section.classList.remove(\"active\"));\n\n    // Show welcome screen if no section specified\n    if (!sectionName) {\n      welcomeScreen.classList.add(\"active\");\n      this.currentSection = null;\n      return;\n    }\n\n    // Show and initialize the requested section\n    const selectedSection = document.getElementById(`${sectionName}-section`);\n    if (selectedSection) {\n      selectedSection.classList.add(\"active\");\n      try {\n        await this.loadAndInitializeSection(sectionName);\n        this.currentSection = sectionName;\n      } catch (error) {\n        console.error(`Error loading section ${sectionName}:`, error);\n        welcomeScreen.classList.add(\"active\");\n        this.currentSection = null;\n      }\n    } else {\n      console.error(`Section element #${sectionName}-section not found`);\n      welcomeScreen.classList.add(\"active\");\n      this.currentSection = null;\n    }\n  }\n\n  /**\n   * Lazy load and initialize a section\n   * @param sectionName The section name to load\n   */\n  private async loadAndInitializeSection(\n    sectionName: string,\n  ): Promise<SectionModule> {\n    if (this.loadedSections.has(sectionName)) {\n      return this.loadedSections.get(sectionName)!;\n    }\n\n    if (this.initializationPromises.has(sectionName)) {\n      return this.initializationPromises.get(sectionName)!;\n    }\n\n    const loadingPromise = this.importAndInitializeSection(sectionName);\n    this.initializationPromises.set(sectionName, loadingPromise);\n\n    try {\n      const module = await loadingPromise;\n      this.loadedSections.set(sectionName, module);\n      this.initializationPromises.delete(sectionName);\n      return module;\n    } catch (error) {\n      this.initializationPromises.delete(sectionName);\n      throw error;\n    }\n  }\n\n  /**\n   * Import a section module dynamically and initialize it\n   * @param sectionName The section name to import\n   */\n  private async importAndInitializeSection(\n    sectionName: string,\n  ): Promise<SectionModule> {\n    const sectionImports: Record<string, () => Promise<any>> = {\n      alphabet: () => import(\"../sections/alphabet\"),\n      numbers: () => import(\"../sections/numbers\"),\n      colors: () => import(\"../sections/colors\"),\n      shapes: () => import(\"../sections/shapes\"),\n      positions: () => import(\"../sections/positions\"),\n      emotions: () => import(\"../sections/emotions\"),\n      bodyParts: () => import(\"../sections/bodyParts\"),\n      animals: () => import(\"../sections/animals\"),\n    };\n\n    try {\n      const module = await sectionImports[sectionName]();\n      if (typeof module.initialize === \"function\") {\n        module.initialize();\n        return {\n          initialize: module.initialize,\n          cleanup: module.cleanup,\n        };\n      } else {\n        throw new Error(\n          `Section module ${sectionName} does not have an initialize function`,\n        );\n      }\n    } catch (error) {\n      console.error(`Failed to import section ${sectionName}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Preload a section without displaying it\n   * @param sectionName The section to preload\n   */\n  public async preloadSection(sectionName: string): Promise<void> {\n    return this.loadAndInitializeSection(sectionName).then(() => {\n      console.log(`Section ${sectionName} preloaded successfully`);\n    });\n  }\n\n  /**\n   * Get the current active section name\n   */\n  public getCurrentSection(): string | null {\n    return this.currentSection;\n  }\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","resolved","URL","toString","$f05278dbb4ed5657$export$abff8b18f9460260","$f05278dbb4ed5657$export$77068e7a2b5653b0","$f05278dbb4ed5657$export$8984e35948b1b8cd","$f05278dbb4ed5657$export$bb2b5c3157a19234","$f05278dbb4ed5657$export$49f5bf502122d4f7","document","querySelectorAll","querySelector","containerClass","container","console","error","$Gr8vk","Promise","all","then","resolve","$fd3dfe73c6bea222$export$d8d5fccfbf47714e","getInstance","instance","constructor","audioCache","loadingPromises","isEnabled","Audio","window","addEventListener","cleanup","loadAudio","src","has","loadingPromise","reject","audio","delete","once","load","playAudio","volume","warn","currentTime","Math","max","min","playPromise","play","undefined","catch","preloadAudioFiles","sources","map","setEnabled","enabled","isAudioEnabled","forEach","pause","clear","$3e794dc041d493b9$export$8905ce1c7a2464a1","loadedImages","Set","lowQualityPlaceholders","observer","IntersectionObserver","onIntersection","bind","rootMargin","threshold","disconnect","entries","entry","isIntersecting","lazyImage","target","dataset","loadImage","unobserve","imgElement","img","Image","onload","classList","add","onerror","createLazyImage","alt","className","placeholderColor","createElement","getLowQualityPlaceholder","replace","observe","setLowQualityPlaceholder","placeholderSrc","preloadImage","preloadImages","url","JSON","parse","$hSXbD","$5f506ee8656cc3a6$export$aa1a34588e698e70","currentSection","loadedSections","initializationPromises","switchSection","sectionName","log","currentModule","welcomeScreen","remove","contentSections","section","selectedSection","getElementById","loadAndInitializeSection","importAndInitializeSection","sectionImports","alphabet","numbers","colors","shapes","positions","emotions","bodyParts","animals","initialize","preloadSection","getCurrentSection","$jKkLD","$klKV5","$551d308b9607047a$var$initApp","sectionManager","AudioLoader","ImageLoader","homeButton","navButtons","button","mascot","setTimeout"],"version":3,"file":"index.f03223da.js.map"}