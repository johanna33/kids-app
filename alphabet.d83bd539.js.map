{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,W,iB,C,A,C,E,E,Q,A,E,Q,S,C,C,C,E,E,E,O,C,a,I,G,E,E,O,C,U,I,G,I,E,E,S,E,E,S,E,E,S,E,E,SCMA,IAAM,EAID,EAAE,CAKA,SAAS,KACd,AAgBF,WACE,IAAM,EAAoB,AAAA,CAAA,EAAA,EAAA,YAAW,AAAX,EAAa,sBAEvC,GAAI,CAAC,EACH,OAIF,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,EAAS,cAAc,CAAC,GAGxB,IAAM,EAAW,SAAS,sBAAsB,GAGhD,AAAA,CAAA,EAAA,EAAA,YAAW,AAAX,EAAa,OAAO,CAAC,AAAC,IACpB,IAAM,EAAa,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,EAAS,aAAa,CAAC,MAAO,CAC/C,UAAW,cACX,KAAM,EAAK,MAAM,CACjB,WAAY,CACV,MAAO,CAAA,EAAG,EAAK,MAAM,CAAC,KAAK,EAAE,EAAK,IAAI,CAAA,CAAE,CACxC,aAAc,CAAA,EAAG,EAAK,MAAM,CAAC,KAAK,EAAE,EAAK,IAAI,CAAA,CAAE,CAC/C,SAAU,GACZ,CACF,GAGM,EAAgB,KACpB,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,EAAU,CAAA,EAAG,EAAK,MAAM,CAAC,KAAK,EAAE,EAAK,IAAI,CAAA,CAAE,EAC3C,EAAW,SAAS,CAAC,GAAG,CAAC,UACzB,WAAW,IAAM,EAAW,SAAS,CAAC,MAAM,CAAC,UAAW,IAC1D,EAEA,EAAW,gBAAgB,CAAC,QAAS,GACrC,EAAe,IAAI,CAAC,CAClB,QAAS,EACT,KAAM,QACN,SAAU,CACZ,GAGA,IAAM,EAAkB,AAAC,IAEnB,CAAA,AAAiB,UAAjB,AADa,EACJ,GAAG,EAAgB,AAAiB,MAAjB,AADf,EACwB,GAAG,AAAK,IAC/C,EAAE,cAAc,GAChB,IAEJ,EAEA,EAAW,gBAAgB,CAAC,UAAW,GACvC,EAAe,IAAI,CAAC,CAClB,QAAS,EACT,KAAM,UACN,SAAU,CACZ,GAEA,EAAS,WAAW,CAAC,EACvB,GAEA,EAAkB,WAAW,CAAC,GAE9B,QAAQ,GAAG,CAAC,WAAY,AAAA,EAAA,YAAW,CAAE,MAAM,CAAE,eAC/C,GA5EA,CAKO,SAAS,IACd,EAAe,OAAO,CAAC,CAAC,CAAA,QAAE,CAAO,CAAA,KAAE,CAAI,CAAA,SAAE,CAAQ,CAAE,IACjD,EAAQ,mBAAmB,CAAC,EAAM,EACpC,GACA,EAAe,MAAM,CAAG,CAC1B,C","sources":["<anon>","src/scripts/sections/alphabet.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"a3vnr\", function(module, exports) {\n\n$parcel$export(module.exports, \"initialize\", () => $f00d78224740cb9d$export$2a47f398eeff8b01);\n$parcel$export(module.exports, \"cleanup\", () => $f00d78224740cb9d$export$de863c629cb9919d);\n\nvar $ioPRj = parcelRequire(\"ioPRj\");\n\nvar $hSXbD = parcelRequire(\"hSXbD\");\n\nvar $4yiPC = parcelRequire(\"4yiPC\");\n\nvar $bsJMP = parcelRequire(\"bsJMP\");\n// Track event listeners for cleanup\nconst $f00d78224740cb9d$var$eventListeners = [];\nfunction $f00d78224740cb9d$export$2a47f398eeff8b01() {\n    $f00d78224740cb9d$var$renderAlphabetSection();\n}\nfunction $f00d78224740cb9d$export$de863c629cb9919d() {\n    $f00d78224740cb9d$var$eventListeners.forEach(({ element: element, type: type, listener: listener })=>{\n        element.removeEventListener(type, listener);\n    });\n    $f00d78224740cb9d$var$eventListeners.length = 0;\n}\n/**\n * Render the alphabet section\n */ function $f00d78224740cb9d$var$renderAlphabetSection() {\n    const alphabetContainer = (0, $hSXbD.getContainer)(\"alphabet-container\");\n    if (!alphabetContainer) return;\n    // Clear the container efficiently\n    (0, $bsJMP.DOMUtils).clearContainer(alphabetContainer);\n    // Use document fragment for better performance\n    const fragment = document.createDocumentFragment();\n    // Create letter cards\n    (0, $ioPRj.alphabetData).forEach((item)=>{\n        const letterCard = (0, $bsJMP.DOMUtils).createElement(\"div\", {\n            className: \"letter-card\",\n            text: item.letter,\n            attributes: {\n                title: `${item.letter} for ${item.word}`,\n                \"aria-label\": `${item.letter} for ${item.word}`,\n                tabindex: \"0\"\n            }\n        });\n        // Add event listener and track it for cleanup\n        const clickListener = ()=>{\n            (0, $4yiPC.speakText)(`${item.letter} for ${item.word}`);\n            letterCard.classList.add(\"active\");\n            setTimeout(()=>letterCard.classList.remove(\"active\"), 1000);\n        };\n        letterCard.addEventListener(\"click\", clickListener);\n        $f00d78224740cb9d$var$eventListeners.push({\n            element: letterCard,\n            type: \"click\",\n            listener: clickListener\n        });\n        // Add keyboard support\n        const keydownListener = (e)=>{\n            const keyEvent = e;\n            if (keyEvent.key === \"Enter\" || keyEvent.key === \" \") {\n                e.preventDefault();\n                clickListener();\n            }\n        };\n        letterCard.addEventListener(\"keydown\", keydownListener);\n        $f00d78224740cb9d$var$eventListeners.push({\n            element: letterCard,\n            type: \"keydown\",\n            listener: keydownListener\n        });\n        fragment.appendChild(letterCard);\n    });\n    alphabetContainer.appendChild(fragment);\n    console.log(\"Rendered\", (0, $ioPRj.alphabetData).length, \"letter cards\");\n}\n\n});\n\n\n//# sourceMappingURL=alphabet.d83bd539.js.map\n","import { alphabetData } from \"../common/data-content\";\nimport { getContainer } from \"../core/dom-elements\";\nimport { speakText } from \"../common/utils\";\nimport { DOMUtils } from \"../core/dom-utils\";\n\n// Track event listeners for cleanup\nconst eventListeners: Array<{\n  element: HTMLElement;\n  type: string;\n  listener: EventListener;\n}> = [];\n\n/**\n * Initialize the alphabet section\n */\nexport function initialize(): void {\n  renderAlphabetSection();\n}\n\n/**\n * Clean up resources when section is hidden\n */\nexport function cleanup(): void {\n  eventListeners.forEach(({ element, type, listener }) => {\n    element.removeEventListener(type, listener);\n  });\n  eventListeners.length = 0;\n}\n\n/**\n * Render the alphabet section\n */\nfunction renderAlphabetSection(): void {\n  const alphabetContainer = getContainer(\"alphabet-container\");\n\n  if (!alphabetContainer) {\n    return;\n  }\n\n  // Clear the container efficiently\n  DOMUtils.clearContainer(alphabetContainer);\n\n  // Use document fragment for better performance\n  const fragment = document.createDocumentFragment();\n\n  // Create letter cards\n  alphabetData.forEach((item) => {\n    const letterCard = DOMUtils.createElement(\"div\", {\n      className: \"letter-card\",\n      text: item.letter,\n      attributes: {\n        title: `${item.letter} for ${item.word}`,\n        \"aria-label\": `${item.letter} for ${item.word}`,\n        tabindex: \"0\",\n      },\n    });\n\n    // Add event listener and track it for cleanup\n    const clickListener = () => {\n      speakText(`${item.letter} for ${item.word}`);\n      letterCard.classList.add(\"active\");\n      setTimeout(() => letterCard.classList.remove(\"active\"), 1000);\n    };\n\n    letterCard.addEventListener(\"click\", clickListener);\n    eventListeners.push({\n      element: letterCard,\n      type: \"click\",\n      listener: clickListener,\n    });\n\n    // Add keyboard support\n    const keydownListener = (e: Event) => {\n      const keyEvent = e as KeyboardEvent;\n      if (keyEvent.key === \"Enter\" || keyEvent.key === \" \") {\n        e.preventDefault();\n        clickListener();\n      }\n    };\n\n    letterCard.addEventListener(\"keydown\", keydownListener);\n    eventListeners.push({\n      element: letterCard,\n      type: \"keydown\",\n      listener: keydownListener,\n    });\n\n    fragment.appendChild(letterCard);\n  });\n\n  alphabetContainer.appendChild(fragment);\n\n  console.log(\"Rendered\", alphabetData.length, \"letter cards\");\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","$f00d78224740cb9d$export$2a47f398eeff8b01","$f00d78224740cb9d$export$de863c629cb9919d","$ioPRj","$hSXbD","$4yiPC","$bsJMP","$f00d78224740cb9d$var$eventListeners","$f00d78224740cb9d$var$renderAlphabetSection","alphabetContainer","getContainer","DOMUtils","clearContainer","fragment","document","createDocumentFragment","alphabetData","forEach","item","letterCard","createElement","className","text","letter","attributes","title","word","tabindex","clickListener","speakText","classList","add","setTimeout","remove","addEventListener","push","element","type","listener","keydownListener","keyEvent","key","preventDefault","appendChild","console","log","length","removeEventListener"],"version":3,"file":"alphabet.d83bd539.js.map"}